right=max(data$tracks$lon) + 0.2*diff(range(data$tracks$lon)),
top=max(data$tracks$lat) + 0.2*diff(range(data$tracks$lat)),
bottom=min(data$tracks$lat)) - 0.1*diff(range(data$tracks$lat)),
maptype='terrain')
ggmap(map) +
geom_path(data=data$tracks, aes(x=lon, y=lat), color='gray40') +
geom_point(data=data$waypoints, aes(x=lon, y=lat), color='blue4') +
geom_text(data=data$waypoints, size=2, nudge_x=0.015*diff(range(data$tracks$lon)), color='blue4', #fontface='bold',
aes(x=lon, y=lat, label=tolower(name), hjust='left')) +
geom_point(data=data$tracks[1,], color='green4', aes(x=lon, y=lat)) +
geom_point(data=data$tracks[nrow(data$tracks),], color='firebrick3', aes(x=lon, y=lat))
library('plotKML')
library('ggmap')
# Data IO
data = readGPX('./data/Recording.gpx')
data$tracks = data.frame(data$tracks)
data$routes = data.frame(data$routes)
# Calculate bounds
bounds <- data.frame(matrix(0, 2, 2), row.names=c('x','y'))
colnames(bounds) = c('min', 'max')
bounds['x', 'min'] = min(data$tracks$lon)
bounds['x', 'max'] = max(data$tracks$lon)
bounds['y', 'min'] = min(data$tracks$lat)
bounds['y', 'max'] = max(data$tracks$lat)
# Map Lookup
map=get_map(location=c(left=min(data$tracks$lon) - 0.1*diff(range(data$tracks$lon)),
right=max(data$tracks$lon) + 0.2*diff(range(data$tracks$lon)),
top=max(data$tracks$lat) + 0.2*diff(range(data$tracks$lat)),
bottom=min(data$tracks$lat)) - 0.1*diff(range(data$tracks$lat)),
maptype='terrain')
ggmap(map) +
geom_path(data=data$tracks, aes(x=lon, y=lat), color='gray40') +
geom_point(data=data$waypoints, aes(x=lon, y=lat), color='blue4') +
geom_text(data=data$waypoints, size=2, nudge_x=0.015*diff(range(data$tracks$lon)), color='blue4', #fontface='bold',
aes(x=lon, y=lat, label=tolower(name), hjust='left')) +
geom_point(data=data$tracks[1,], color='green4', aes(x=lon, y=lat)) +
geom_point(data=data$tracks[nrow(data$tracks),], color='firebrick3', aes(x=lon, y=lat))
# Data IO
data = readGPX('./data/Recording.gpx')
data$tracks = data.frame(data$tracks)
data$routes = data.frame(data$routes)
# Calculate bounds
bounds <- data.frame(matrix(0, 2, 2), row.names=c('x','y'))
colnames(bounds) = c('min', 'max')
bounds['x', 'min'] = min(data$tracks$lon)
bounds['x', 'max'] = max(data$tracks$lon)
bounds['y', 'min'] = min(data$tracks$lat)
bounds['y', 'max'] = max(data$tracks$lat)
# Map Lookup
map=get_map(location=c(left=min(data$tracks$lon) - 0.1*diff(range(data$tracks$lon)),
right=max(data$tracks$lon) + 0.2*diff(range(data$tracks$lon)),
top=max(data$tracks$lat) + 0.2*diff(range(data$tracks$lat)),
bottom=min(data$tracks$lat)) - 0.1*diff(range(data$tracks$lat)),
maptype='terrain')
library('plotKML')
library('ggmap')
# Data IO
data = readGPX('./data/Recording.gpx')
data$tracks = data.frame(data$tracks)
data$routes = data.frame(data$routes)
# Calculate bounds
bounds <- data.frame(matrix(0, 2, 2), row.names=c('x','y'))
colnames(bounds) = c('min', 'max')
bounds['x', 'min'] = min(data$tracks$lon)
bounds['x', 'max'] = max(data$tracks$lon)
bounds['y', 'min'] = min(data$tracks$lat)
bounds['y', 'max'] = max(data$tracks$lat)
# Map Lookup
map=get_map(location=c(left=min(data$tracks$lon) - 0.1*diff(range(data$tracks$lon)),
right=max(data$tracks$lon) + 0.2*diff(range(data$tracks$lon)),
top=max(data$tracks$lat) + 0.2*diff(range(data$tracks$lat)),
bottom=min(data$tracks$lat)) - 0.1*diff(range(data$tracks$lat)),
maptype='terrain')
ggmap(map) +
geom_path(data=data$tracks, aes(x=lon, y=lat), color='gray40') +
geom_point(data=data$waypoints, aes(x=lon, y=lat), color='blue4') +
geom_text(data=data$waypoints, size=2, nudge_x=0.015*diff(range(data$tracks$lon)), color='blue4', #fontface='bold',
aes(x=lon, y=lat, label=tolower(name), hjust='left')) +
geom_point(data=data$tracks[1,], color='green4', aes(x=lon, y=lat)) +
geom_point(data=data$tracks[nrow(data$tracks),], color='firebrick3', aes(x=lon, y=lat))
install.packages('geosphere')
library('geosphere')
distGeo(as.matrix(data$tracks$lon, data$track$lat))
as.matrix(data$tracks$lon, data$track$lat)
rbind(data$tracks$lon, data$track$lat)
data$tracks$lon, data$track$lat
matrix(data$tracks$lon, data$tracks$lat)
size(matrix(data$tracks$lon, data$tracks$lat))
data$tracks[,c('lon', 'lat')]
distGeo(data$tracks[,c('lon', 'lat')])
length(data$tracks)
length(data$tracks$lon)
distances=distGeo(data$tracks[,c('lon', 'lat')])
length(distances)
sum(distances)
distances
class(distances)
sum(distances==NA)
distances==NA
distances
distances[length(distances)]
distances[length(distances)-1]
sum(distances(-length(distances)))
sum(distances[-length(distances)])
sum(distances[-length(distances)])/1609.344
?cumsum
data$distances=distGeo(data$tracks[,c('lon', 'lat')])
data$cum.distance=cumsum(data$distances)
total.distance = sum(data$distances[-length(data$distances)])/1609.344 #convert to miles
data$cum.distance(length(data$cum.distance))
data$cum.distance[length(data$cum.distance)]
rm(list=ls())
# Data IO
data = readGPX('./data/Recording.gpx')
data$tracks = data.frame(data$tracks)
data$routes = data.frame(data$routes)
# Calculate bounds
bounds <- data.frame(matrix(0, 2, 2), row.names=c('x','y'))
colnames(bounds) = c('min', 'max')
bounds['x', 'min'] = min(data$tracks$lon)
bounds['x', 'max'] = max(data$tracks$lon)
bounds['y', 'min'] = min(data$tracks$lat)
bounds['y', 'max'] = max(data$tracks$lat)
# Distances
data$tracks$distances=distGeo(data$tracks[,c('lon', 'lat')])
data$$trackscum.distance=cumsum(data$tracks$distances)
total.distance = sum(data$tracks$distances[-length(data$tracks$distances)])/1609.344 #convert to miles
bounds <- data.frame(matrix(0, 2, 2), row.names=c('x','y'))
colnames(bounds) = c('min', 'max')
bounds['x', 'min'] = min(data$tracks$lon)
bounds['x', 'max'] = max(data$tracks$lon)
bounds['y', 'min'] = min(data$tracks$lat)
bounds['y', 'max'] = max(data$tracks$lat)
# Distances
data$tracks$distances=distGeo(data$tracks[,c('lon', 'lat')])
data$tracks$cum.distance=cumsum(data$tracks$distances)
total.distance = sum(data$tracks$distances[-length(data$tracks$distances)])/1609.344 #convert to miles
plot(data$tracks)
data$tracks
plot(data$tracks$cum.distance, data$tracks$ele)
rm(list=ls())
# Data IO
data = readGPX('./data/Recording.gpx')
data$tracks = data.frame(data$tracks)
data$routes = data.frame(data$routes)
# Calculate bounds
bounds <- data.frame(matrix(0, 2, 2), row.names=c('x','y'))
colnames(bounds) = c('min', 'max')
bounds['x', 'min'] = min(data$tracks$lon)
bounds['x', 'max'] = max(data$tracks$lon)
bounds['y', 'min'] = min(data$tracks$lat)
bounds['y', 'max'] = max(data$tracks$lat)
# Distances
data$tracks$distances=distGeo(data$tracks[,c('lon', 'lat')])
data$tracks$cum.distance=cumsum(data$tracks$distances)/1609.344 # convert to miles from meters
total.distance = sum(data$tracks$distances[-length(data$tracks$distances)])/1609.344 #convert to miles
plot(data$tracks$cum.distance, data$tracks$ele)
library('plotKML')
library('geosphere')
library('ggmap')
# Data IO
data = readGPX('./data/Recording.gpx')
data$tracks = data.frame(data$tracks)
data$routes = data.frame(data$routes)
# Calculate bounds
bounds <- data.frame(matrix(0, 2, 2), row.names=c('x','y'))
colnames(bounds) = c('min', 'max')
bounds['x', 'min'] = min(data$tracks$lon)
bounds['x', 'max'] = max(data$tracks$lon)
bounds['y', 'min'] = min(data$tracks$lat)
bounds['y', 'max'] = max(data$tracks$lat)
# Distances
data$tracks$distances=distGeo(data$tracks[,c('lon', 'lat')])
data$tracks$cum.distance=cumsum(data$tracks$distances)/1609.344 # convert to miles from meters
total.distance = sum(data$tracks$distances[-length(data$tracks$distances)])/1609.344 #convert to miles
# Map Lookup
map=get_map(location=c(left=min(data$tracks$lon) - 0.1*diff(range(data$tracks$lon)),
right=max(data$tracks$lon) + 0.2*diff(range(data$tracks$lon)),
top=max(data$tracks$lat) + 0.2*diff(range(data$tracks$lat)),
bottom=min(data$tracks$lat)) - 0.1*diff(range(data$tracks$lat)),
maptype='terrain')
ggmap(map) +
geom_path(data=data$tracks, aes(x=lon, y=lat), color='gray40') +
geom_point(data=data$waypoints, aes(x=lon, y=lat), color='blue4') +
geom_text(data=data$waypoints, size=2, nudge_x=0.015*diff(range(data$tracks$lon)), color='blue4', #fontface='bold',
aes(x=lon, y=lat, label=tolower(name), hjust='left')) +
geom_point(data=data$tracks[1,], color='green4', aes(x=lon, y=lat)) +
geom_point(data=data$tracks[nrow(data$tracks),], color='firebrick3', aes(x=lon, y=lat)) +
xlab('Longitude') + ylab('Latitude')
ggplot(data=data$tracks, aes(x=ele, y=cum.distance)) +
geom_line() +
xlab('Cumulative Distance (miles)') + ylab('Elevation (feet)')
plot(data$tracks$cum.distance)
plot(data$tracks$ele)
library('plotKML')
library('geosphere')
library('ggmap')
# Data IO
data = readGPX('./data/Recording.gpx')
data$tracks = data.frame(data$tracks)
data$routes = data.frame(data$routes)
# Calculate bounds
bounds <- data.frame(matrix(0, 2, 2), row.names=c('x','y'))
colnames(bounds) = c('min', 'max')
bounds['x', 'min'] = min(data$tracks$lon)
bounds['x', 'max'] = max(data$tracks$lon)
bounds['y', 'min'] = min(data$tracks$lat)
bounds['y', 'max'] = max(data$tracks$lat)
# Distances
data$tracks$distances=distGeo(data$tracks[,c('lon', 'lat')])
data$tracks$cum.distance=cumsum(data$tracks$distances)/1609.344 # convert to miles from meters
total.distance = sum(data$tracks$distances[-length(data$tracks$distances)])/1609.344 #convert to miles
# Map Lookup
map=get_map(location=c(left=min(data$tracks$lon) - 0.1*diff(range(data$tracks$lon)),
right=max(data$tracks$lon) + 0.2*diff(range(data$tracks$lon)),
top=max(data$tracks$lat) + 0.2*diff(range(data$tracks$lat)),
bottom=min(data$tracks$lat)) - 0.1*diff(range(data$tracks$lat)),
maptype='terrain')
ggmap(map) +
geom_path(data=data$tracks, aes(x=lon, y=lat), color='gray40') +
geom_point(data=data$waypoints, aes(x=lon, y=lat), color='blue4') +
geom_text(data=data$waypoints, size=2, nudge_x=0.015*diff(range(data$tracks$lon)), color='blue4', #fontface='bold',
aes(x=lon, y=lat, label=tolower(name), hjust='left')) +
geom_point(data=data$tracks[1,], color='green4', aes(x=lon, y=lat)) +
geom_point(data=data$tracks[nrow(data$tracks),], color='firebrick3', aes(x=lon, y=lat)) +
xlab('Longitude') + ylab('Latitude')
ggplot(data=data$tracks, aes(x=cum.distance, y=ele)) +
geom_point() +
xlab('Cumulative Distance (miles)') + ylab('Elevation (feet)')
plot(data$tracks$cum.distance, dataggplot(data=data$tracks, aes(x=cum.distance, y=ele)) +
geom_line() +
xlab('Cumulative Distance (miles)') + ylab('Elevation (feet)'))
ggplot(data=data$tracks, aes(x=cum.distance, y=ele)) +
geom_line() +
xlab('Cumulative Distance (miles)') + ylab('Elevation (feet)')
fig <- ggplot(data=data$tracks, aes(x=cum.distance, y=ele)) +
geom_line() +
xlab('Cumulative Distance (miles)') + ylab('Elevation (feet)')
print(fig)
graphics.off()
length(data$lon)
length(data$tracks$lon)
length(data$tracks$cum.distance)
data$tracks$cum.distance[length(data$tracks$cum.distance)]
data$tracks$distances=distGeo(data$tracks[,c('lon', 'lat')])
data$tracks$distances[length(data$tracks$distances)] = 0
data$tracks$cum.distance=cumsum(data$tracks$distances)/1609.344 # convert to miles from meters
total.distance = sum(data$tracks$distances[-length(data$tracks$distances)])/1609.344 #convert to miles
data$tracks$cum.distance[length(data$tracks$cum.distance)]
plot(data$tracks$cum.distance, data$tracks$ele)
ggplot(data$tracks, aes(x=cum.distance, y=ele)) + geom_line()
ggplot(data$tracks, aes(x=cum.distance, y=ele)) + geom_path()
ggplot(data=data$tracks, aes(x=cum.distance, y=ele)) + geom_line()
ggplot(data=data$tracks, aes(y=ele)) + geom_line()
ggplot(data=data$tracks, aes(x=ele)) + geom_line()
ggplot(data=data$tracks, aes(x=ele)) + geom_point()
ggplot(data=data$tracks, aes(x=cum.distance, y=ele)) + geom_point()
graphics.off()
ggplot(data=data$tracks, aes(x=cum.distance, y=ele)) + geom_smooth()
data$ele
data$tracks$ele
as.numeric(data$tracks$ele)
library('plotKML')
library('geosphere')
library('ggmap')
# Data IO
data <- readGPX('./data/Recording.gpx')
data$tracks <- data.frame(data$tracks)
data$tracks$ele <- as.numeric(data$tracks$ele)
data$routes <- data.frame(data$routes)
# Calculate bounds
bounds <- data.frame(matrix(0, 2, 2), row.names=c('x','y'))
colnames(bounds) = c('min', 'max')
bounds['x', 'min'] <- min(data$tracks$lon)
bounds['x', 'max'] <- max(data$tracks$lon)
bounds['y', 'min'] <- min(data$tracks$lat)
bounds['y', 'max'] <- max(data$tracks$lat)
# Distances
data$tracks$distances <- distGeo(data$tracks[,c('lon', 'lat')])
data$tracks$distances[length(data$tracks$distances)] <- 0
data$tracks$cum.distance <- cumsum(data$tracks$distances)/1609.344 # convert to miles from meters
total.distance <- sum(data$tracks$distances[-length(data$tracks$distances)])/1609.344 #convert to miles
# Map Lookup
map <- get_map(location=c(left=min(data$tracks$lon) - 0.1*diff(range(data$tracks$lon)),
right=max(data$tracks$lon) + 0.2*diff(range(data$tracks$lon)),
top=max(data$tracks$lat) + 0.2*diff(range(data$tracks$lat)),
bottom=min(data$tracks$lat)) - 0.1*diff(range(data$tracks$lat)),
maptype='terrain')
ggmap(map) +
geom_path(data=data$tracks, aes(x=lon, y=lat), color='gray40') +
geom_point(data=data$waypoints, aes(x=lon, y=lat), color='blue4') +
geom_text(data=data$waypoints, size=2, nudge_x=0.015*diff(range(data$tracks$lon)), color='blue4', #fontface='bold',
aes(x=lon, y=lat, label=tolower(name), hjust='left')) +
geom_point(data=data$tracks[1,], color='green4', aes(x=lon, y=lat)) +
geom_point(data=data$tracks[nrow(data$tracks),], color='firebrick3', aes(x=lon, y=lat)) +
xlab('Longitude') + ylab('Latitude')
ggplot(data=data$tracks, aes(x=cum.distance, y=ele)) +
geom_line() +
xlab('Cumulative Distance (miles)') + ylab('Elevation (feet)')
ggplot(data=data$tracks, aes(x=cum.distance, y=ele)) +
+   geom_smooth() +
+   xlab('Cumulative Distance (miles)') + ylab('Elevation (feet)')
ggplot(data=data$tracks, aes(x=cum.distance, y=ele)) +
geom_smooth() +
xlab('Cumulative Distance (miles)') + ylab('Elevation (feet)')
?geom_smooth
ggplot(data=data$tracks, aes(x=cum.distance, y=ele)) +
geom_smooth(span=10) +
xlab('Cumulative Distance (miles)') + ylab('Elevation (feet)')
ggplot(data=data$tracks, aes(x=cum.distance, y=ele)) +
geom_smooth(method='loess', span=10) +
xlab('Cumulative Distance (miles)') + ylab('Elevation (feet)')
ggplot(data=data$tracks, aes(x=cum.distance, y=ele)) +
geom_smooth(method='loess', span=1) +
xlab('Cumulative Distance (miles)') + ylab('Elevation (feet)')
ggplot(data=data$tracks, aes(x=cum.distance, y=ele)) +
geom_smooth(method='loess', span=0.001) +
xlab('Cumulative Distance (miles)') + ylab('Elevation (feet)')
ggplot(data=data$tracks, aes(x=cum.distance, y=ele)) +
geom_smooth(method='loess', span=0.0001) +
xlab('Cumulative Distance (miles)') + ylab('Elevation (feet)')
ggplot(data=data$tracks, aes(x=cum.distance, y=ele)) +
geom_smooth(method='loess', span=0.001) +
xlab('Cumulative Distance (miles)') + ylab('Elevation (feet)')
ggplot(data=data$tracks, aes(x=cum.distance, y=ele)) +
geom_smooth(method='loess', span=0.0005) +
xlab('Cumulative Distance (miles)') + ylab('Elevation (feet)')
ggplot(data=data$tracks, aes(x=cum.distance, y=ele)) +
geom_smooth(method='loess', span=0.0002) +
xlab('Cumulative Distance (miles)') + ylab('Elevation (feet)')
ggplot(data=data$tracks, aes(x=cum.distance, y=ele)) +
geom_smooth(method='loess', span=0.0003) +
xlab('Cumulative Distance (miles)') + ylab('Elevation (feet)')
?movmean
ggplot(data=data$tracks, aes(x=cum.distance, y=rollmedian(ele))) +
geom_smooth() +
xlab('Cumulative Distance (miles)') + ylab('Elevation (feet)')
library('zoo')
ggplot(data=data$tracks, aes(x=cum.distance, y=rollmedian(ele), 5)) +
geom_smooth() +
xlab('Cumulative Distance (miles)') + ylab('Elevation (feet)')
ggplot(data=data$tracks, aes(x=cum.distance, y=rollmedian(ele, 5))) +
geom_smooth() +
xlab('Cumulative Distance (miles)') + ylab('Elevation (feet)')
ggplot(data=data$tracks, aes(x=cum.distance, y=rollmedian(ele), 1)) +
geom_smooth() +
xlab('Cumulative Distance (miles)') + ylab('Elevation (feet)')
ggplot(data=data$tracks, aes(x=cum.distance, y=rollmedian(ele, 1))) +
geom_smooth() +
xlab('Cumulative Distance (miles)') + ylab('Elevation (feet)')
ggplot(data=data$tracks, aes(x=cum.distance, y=rollmedian(ele, 1))) +
geom_line() +
xlab('Cumulative Distance (miles)') + ylab('Elevation (feet)')
ggplot(data=data$tracks, aes(x=cum.distance, y=rollmedian(ele, 5))) +
geom_line() +
xlab('Cumulative Distance (miles)') + ylab('Elevation (feet)')
ggplot(data=data$tracks, aes(x=cum.distance, y=rollmedian(ele, 5, na.pad=TRUE))) +
geom_line() +
xlab('Cumulative Distance (miles)') + ylab('Elevation (feet)')
ggplot(data=data$tracks, aes(x=cum.distance, y=rollmedian(ele, 10, na.pad=TRUE))) +
geom_line() +
xlab('Cumulative Distance (miles)') + ylab('Elevation (feet)')
ggplot(data=data$tracks, aes(x=cum.distance, y=rollmedian(ele, 100, na.pad=TRUE))) +
geom_line() +
xlab('Cumulative Distance (miles)') + ylab('Elevation (feet)')
ggplot(data=data$tracks, aes(x=cum.distance, y=rollmedian(ele, 50, na.pad=TRUE))) +
geom_line() +
xlab('Cumulative Distance (miles)') + ylab('Elevation (feet)')
tbl <- data.frame(
total.distance=total.distance,
max.elevation=max(data$tracks$ele),
min.elevation=min(data$tracks$ele),
total.uphill=sum(diff(data$tracks$ele)[diff$tracks$ele > 0]),
total.downhill=sum(diff(data$tracks$ele)[diff$tracks$ele < 0])
)
diff$tracks$ele
tbl <- data.frame(
total.distance=total.distance,
max.elevation=max(data$tracks$ele),
min.elevation=min(data$tracks$ele),
total.uphill=sum(diff(data$tracks$ele)[diff(data$tracks$ele) > 0]),
total.downhill=sum(diff(data$tracks$ele)[diff(data$tracks$ele) < 0])
)
tbl
tbl <- data.frame(
total.distance=sprintf('%0.2f miles', total.distance),
max.elevation=sprintf('%0.2f feet', max(data$tracks$ele)),
min.elevation=sprintf('%0.2f feet', min(data$tracks$ele)),
total.uphill=sprintf('%0.2f feet', sum(diff(data$tracks$ele)[diff(data$tracks$ele) > 0])),
total.downhill=sprintf('%0.2f feet', -sum(diff(data$tracks$ele)[diff(data$tracks$ele) < 0]))
)
library('knitr')
library('kableExtra')
library('plotKML')
library('geosphere')
library('zoo')
library('ggmap')
library('knitr')
library('kableExtra')
# Data IO
data <- readGPX('./data/Recording.gpx')
data$tracks <- data.frame(data$tracks)
data$tracks$ele <- rollmedian(as.numeric(data$tracks$ele), 50, na.pad=TRUE)
data$routes <- data.frame(data$routes)
# Calculate bounds
bounds <- data.frame(matrix(0, 2, 2), row.names=c('x','y'))
colnames(bounds) = c('min', 'max')
bounds['x', 'min'] <- min(data$tracks$lon)
bounds['x', 'max'] <- max(data$tracks$lon)
bounds['y', 'min'] <- min(data$tracks$lat)
bounds['y', 'max'] <- max(data$tracks$lat)
# Distances
data$tracks$distances <- distGeo(data$tracks[,c('lon', 'lat')])
data$tracks$distances[length(data$tracks$distances)] <- 0
data$tracks$cum.distance <- cumsum(data$tracks$distances)/1609.344 # convert to miles from meters
total.distance <- sum(data$tracks$distances[-length(data$tracks$distances)])/1609.344 #convert to miles
# Map Lookup
map <- get_map(location=c(left=min(data$tracks$lon) - 0.1*diff(range(data$tracks$lon)),
right=max(data$tracks$lon) + 0.2*diff(range(data$tracks$lon)),
top=max(data$tracks$lat) + 0.2*diff(range(data$tracks$lat)),
bottom=min(data$tracks$lat)) - 0.1*diff(range(data$tracks$lat)),
maptype='terrain')
tbl <- data.frame(
total.distance=sprintf('%0.2f miles', total.distance),
max.elevation=sprintf('%0.2f feet', max(data$tracks$ele)),
min.elevation=sprintf('%0.2f feet', min(data$tracks$ele)),
total.uphill=sprintf('%0.2f feet', sum(diff(data$tracks$ele)[diff(data$tracks$ele) > 0])),
total.downhill=sprintf('%0.2f feet', -sum(diff(data$tracks$ele)[diff(data$tracks$ele) < 0]))
)
colnames(tbl) <- c('Total Distance', 'Max. Elevation', 'Min. Elevation', 'Total Uphill Distance', 'Total Downhill Distance')
kable(tbl) %>%
kable_styling(bootstrap_options = 'striped')
ggmap(map) +
geom_path(data=data$tracks, aes(x=lon, y=lat), color='gray40') +
geom_point(data=data$waypoints, aes(x=lon, y=lat), color='blue4') +
geom_text(data=data$waypoints, size=2, nudge_x=0.015*diff(range(data$tracks$lon)), color='blue4', #fontface='bold',
aes(x=lon, y=lat, label=tolower(name), hjust='left')) +
geom_point(data=data$tracks[1,], color='green4', aes(x=lon, y=lat)) +
geom_point(data=data$tracks[nrow(data$tracks),], color='firebrick3', aes(x=lon, y=lat)) +
xlab('Longitude') + ylab('Latitude')
ggplot(data=data$tracks, aes(x=cum.distance, y=ele)) +
geom_line() +
xlab('Cumulative Distance (miles)') + ylab('Elevation (feet)')
na.rm
?max
tbl <- data.frame(
total.distance=sprintf('%0.2f miles', total.distance),
max.elevation=sprintf('%0.2f feet', max(data$tracks$ele, na.rm=T)),
min.elevation=sprintf('%0.2f feet', min(data$tracks$ele, na.rm=T)),
total.uphill=sprintf('%0.2f feet', sum(diff(data$tracks$ele, na.rm=T)[diff(data$tracks$ele, na.rm=T) > 0])),
total.downhill=sprintf('%0.2f feet', -sum(diff(data$tracks$ele, na.rm=T)[diff(data$tracks$ele, na.rm=T) < 0]))
)
tbl
diff(data$tracks$ele, na.rm=T)
tbl <- data.frame(
total.distance=sprintf('%0.2f miles', total.distance),
max.elevation=sprintf('%0.2f feet', max(data$tracks$ele, na.rm=T)),
min.elevation=sprintf('%0.2f feet', min(data$tracks$ele, na.rm=T)),
total.uphill=sprintf('%0.2f feet', sum(diff(data$tracks$ele, na.rm=T)[diff(data$tracks$ele, na.rm=T) > 0], na.rm=T)),
total.downhill=sprintf('%0.2f feet', -sum(diff(data$tracks$ele, na.rm=T)[diff(data$tracks$ele, na.rm=T) < 0], na.rm=T))
)
tbl
library('plotKML')
library('geosphere')
library('zoo')
library('ggmap')
library('knitr')
library('kableExtra')
# Data IO
data <- readGPX('./data/Recording.gpx')
data$tracks <- data.frame(data$tracks)[1:500,]
data$tracks$ele <- rollmedian(as.numeric(data$tracks$ele), 50, na.pad=TRUE)
data$routes <- data.frame(data$routes)
# Calculate bounds
bounds <- data.frame(matrix(0, 2, 2), row.names=c('x','y'))
colnames(bounds) = c('min', 'max')
bounds['x', 'min'] <- min(data$tracks$lon)
bounds['x', 'max'] <- max(data$tracks$lon)
bounds['y', 'min'] <- min(data$tracks$lat)
bounds['y', 'max'] <- max(data$tracks$lat)
# Distances
data$tracks$distances <- distGeo(data$tracks[,c('lon', 'lat')])
data$tracks$distances[length(data$tracks$distances)] <- 0
data$tracks$cum.distance <- cumsum(data$tracks$distances)/1609.344 # convert to miles from meters
total.distance <- sum(data$tracks$distances[-length(data$tracks$distances)])/1609.344 #convert to miles
# Map Lookup
map <- get_map(location=c(left=min(data$tracks$lon) - 0.1*diff(range(data$tracks$lon)),
right=max(data$tracks$lon) + 0.2*diff(range(data$tracks$lon)),
top=max(data$tracks$lat) + 0.2*diff(range(data$tracks$lat)),
bottom=min(data$tracks$lat)) - 0.1*diff(range(data$tracks$lat)),
maptype='terrain')
tbl <- data.frame(
total.distance=sprintf('%0.2f miles', total.distance),
max.elevation=sprintf('%0.2f feet', max(data$tracks$ele, na.rm=T)),
min.elevation=sprintf('%0.2f feet', min(data$tracks$ele, na.rm=T)),
total.uphill=sprintf('%0.2f feet', sum(diff(data$tracks$ele, na.rm=T)[diff(data$tracks$ele, na.rm=T) > 0], na.rm=T)),
total.downhill=sprintf('%0.2f feet', -sum(diff(data$tracks$ele, na.rm=T)[diff(data$tracks$ele, na.rm=T) < 0], na.rm=T))
)
colnames(tbl) <- c('Total Distance', 'Max. Elevation', 'Min. Elevation', 'Total Uphill Distance', 'Total Downhill Distance')
kable(tbl) %>%
kable_styling(bootstrap_options = 'striped')
ggmap(map) +
geom_path(data=data$tracks, aes(x=lon, y=lat), color='gray40') +
geom_point(data=data$waypoints, aes(x=lon, y=lat), color='blue4') +
geom_text(data=data$waypoints, size=2, nudge_x=0.015*diff(range(data$tracks$lon)), color='blue4', #fontface='bold',
aes(x=lon, y=lat, label=tolower(name), hjust='left')) +
geom_point(data=data$tracks[1,], color='green4', aes(x=lon, y=lat)) +
geom_point(data=data$tracks[nrow(data$tracks),], color='firebrick3', aes(x=lon, y=lat)) +
xlab('Longitude') + ylab('Latitude')
ggplot(data=data$tracks, aes(x=cum.distance, y=ele)) +
geom_line() +
xlab('Cumulative Distance (miles)') + ylab('Elevation (feet)')
